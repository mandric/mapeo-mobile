language: android
# using sudo just for performance because dockerized startup is faster but
# overall runs slower
sudo: required
jdk: oraclejdk8
#dist: trusty
#group: edge

android:
  # supported component names are printed in build system info after travis
  # image boot
  components:
    # using default build tools
    # - build-tools-28.0.2
    # SDK version used to compile your project
    - android-26
    - tools
    # x86 emulators fail on travis, use ARM based image.
    # See https://github.com/mmcc007/test_emulators
    - sys-img-armeabi-v7a-google_apis-25

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache

before_install:
  # Install node.js
  - nvm install 8
  - node --version
  - export TZ=America/Los_Angeles
  #- export VERSION_TO_BUILD="$TRAVIS_TAG"
  #- yes | sdkmanager 'platforms;android-26' 'build-tools;26.0.1'
  # - sdkmanager "system-images;android-25;google_apis;armeabi-v7a" > /dev/null
  - yes | sdkmanager --update
  - yes | sdkmanager --licenses
  - sdkmanager --list
  # Emulator Management: Create, Start and Wait
  - echo no | avdmanager create avd --force -n test -k "system-images;android-25;google_apis;armeabi-v7a"
  # travis ignores failures here, maybe emulator does not exit properly.
  - env
  - "$ANDROID_HOME/emulator/emulator" -avd test -no-audio -no-window &

install:
  # Setup Android dependencies
  #- sudo ln -s /usr/local/android-sdk-25.2.3 /usr/local/android-sdk-26.0.1
  # Install the React Native project dependencies
  - npm install -g yarn
  - yarn

before_script:
  - android-wait-for-emulator
  - adb shell input keyevent 82 &

script:
  - npm run android
  # Run unit tests using Jest
  #- yarn jest
