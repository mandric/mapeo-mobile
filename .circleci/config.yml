#
# Based off https://github.com/CircleCI-Public/circleci-demo-react-native.
#
# Also see https://circleci.com/docs/2.0/language-android/ for more help to get
# started.
#
# Build and upload debug `apk` files that can be installed and tested on a
# device or emulator using:
#
#   adb uninstall com.mapeomobile
#   adb install [path to apk]
#
# Caveats
#
# If the app signing key did not change on each build then `-r` could be used
# to preserve local app settings instead of uninstalling it completely.
#
#     adb install -r [path to apk]
#
# Keeping separate node and android jobs because later if we add ios we can
# share the node assets.
#
# Avoiding `yarn run android` or `react-native run-android` because it tries to
# install the apk so requires an emulator to be setup and running.
#
# Avoiding `assembleDebug` target for now because it also builds the benchmark
# app which fails on the `bundleBenchmarkDebugJsAndAssets` target with OOM node
# error.
#
#   * What went wrong:
#   Execution failed for task ':app:bundleBenchmarkDebugJsAndAssets'.
#   > Process 'command 'node'' finished with non-zero exit value 137
#
#
version: 2

jobs:

  build:
    working_directory: ~/repo
    docker:
      - image: circleci/android:api-27-node8-alpha
    environment:
      TERM: dumb
      JVM_OPTS: -Xmx3200m
      #NODE_OPTIONS: "--max-old-space-size=500 --max_old_space_size=500"
      #ADB_INSTALL_TIMEOUT: 10
      #_JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
      #GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs="-XX:+HeapDumpOnOutOfMemoryError"'
      #ANDROID_NDK: '/opt/ndk/android-ndk-r17c'
    steps:
      - checkout
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
      - run: yarn install
      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules
      - run: node -v && npm run build-rnnodeapp
      #- persist_to_workspace:
      #    root: ~/repo
      #    paths:
      #      - node_modules
      #- run:
      #    name: jest tests
      #    command: |
      #      mkdir -p test-results/jest
      #      yarn run test
      #    environment:
      #      JEST_JUNIT_OUTPUT: test-results/jest/junit.xml
      #
      #- store_test_results:
      #    path: test-results
      #
      #- store_artifacts:
      #    path: test-results
      - restore_cache:
          key: jars-v1-{{ checksum "android/build.gradle" }}-{{ checksum  "android/app/build.gradle" }}
      #- run: cd android && ./gradlew lint test
      #- run: ./gradlew bundleBenchmarkDebugJsAndAssets
      #- run: ./gradlew assembleAppDebug
      - run: cd android && ./gradlew bundleAppDebugJsAndAssets assembleAppDebug
      - run: cd android && ./gradlew assembleDebug
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-v1-{{ checksum "android/build.gradle" }}-{{ checksum  "android/app/build.gradle" }}
      - store_artifacts:
          path: android/app/build/outputs/apk/
          destination: apks/
